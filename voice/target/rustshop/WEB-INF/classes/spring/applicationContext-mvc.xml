<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:mvc="http://www.springframework.org/schema/mvc"  
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">  
  
    <!-- 告知Spring，我们启用注解驱动 -->  
    <mvc:annotation-driven />
    
    	<mvc:annotation-driven >
        <mvc:message-converters>
            <bean id="mappingJacksonHttpMessageConverter"
                class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                        <value>application/*+json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
            
             <!-- 配置文件上传类型解析器 multipartResolver-->

        </mvc:message-converters>
    </mvc:annotation-driven>
    
    
    <!-- org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，  
    它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，  
    就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理。 -->  
    <mvc:default-servlet-handler/>  
    <!-- 指定要扫描的包的位置 -->  
    <context:component-scan base-package="com" />  
    <!-- 对静态资源文件的访问,因为Spring MVC会拦截所有请求,导致jsp页面中对js和CSS的引用也被拦截,配置后可以把对资源的请求交给项目的  
    默认拦截器而不是Spring MVC-->  





  	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="jsonHttpMessageConverter" />
			</list>
		</property>
	</bean>
 


	
  
    <!-- 配置Spring MVC的视图解析器 -->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 有时我们需要访问JSP页面,可理解为在控制器controller的返回值加前缀和后缀,变成一个可用的URL地址 -->  
    </bean>  
    
   
	
    <!-- 定义文件解释器 -->

    
    
</beans>  